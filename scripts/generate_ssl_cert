#!/bin/bash
#
# Copyright (c) Citrix Systems 2007, 2008, 2017. All rights reserved.
#
# Generate a TLS certificate file to use with stunnel etc.
#

logger XXXX generate-ssl-cert script started at $(date)

DIR=/tmp/ssl-generation-$$
FILE=$1
CN=$2

if [ -z "${CN}" ]; then
	echo "usage: $0 <certname> <cn>"
	logger "usage: $0 <certname> <cn>"
	exit 2
fi

if [ -e ${FILE} ]; then
	echo "file already exists: cannot overwrite";
	logger "file already exists: cannot overwrite"
	exit 3
fi

logger XXXX generate-ssl-cert generating dnsnames
dnsnames=$((hostname -A; hostname -f) | sort | uniq)
logger XXXX generate-ssl-cert generating addresses
addresses=$(hostname -I | sort | uniq)

mkdir -p ${DIR}
chmod 700 ${DIR}

pushd ${DIR}

# config file written so as to give the same behaviour with the
# openssl "req" and "x509" commands (because x509 fails to include
# extension sections when creating a certificate from a CSR).
cat <<@eof >config
extensions = ext_section # For openssl x509 command
[req] # openssl req params
prompt = no
distinguished_name = dn-param
req_extensions = ext_section
[dn-param] # DN fields
CN = ${CN}
[ ext_section ]
subjectAltName = @alt_names
[alt_names]
@eof

i=0
for x in $dnsnames
do
	let i=i+1
	echo "DNS.${i}=${x}" >> config
done
i=0
for x in $addresses
do
	let i=i+1
	echo "IP.${i}=${x}" >> config
done

openssl genrsa 1024 > privkey.rsa

# Generate certificate-signing-request
logger XXXX generate-ssl-cert generating certificate-signing-request
openssl req -batch -new -key privkey.rsa -days 3650 -config config -out cert.csr

# Sign it, creating a certificate.
# Due to a bug in openssl x509, the extensions in the CSR are ignored
# so we have to re-specify them using the -extfile option.
# (Trying to do this in one step by passing -x509 to the "req" command ignores
# the extensions too, but "req" does not allow the -extfile option.)
logger XXXX generate-ssl-cert signing it
openssl x509 -extfile config -req -signkey privkey.rsa -in cert.csr -outform PEM -out signedpubcert.pem -days 3650

logger XXXX generate-ssl-cert openssl dhparam
openssl dhparam 512 > dh.pem

popd

(cat ${DIR}/privkey.rsa; echo ""; cat ${DIR}/signedpubcert.pem; \
 echo ""; cat ${DIR}/dh.pem) > ${FILE}
chmod 400 ${FILE}

rm -rf ${DIR}

logger XXXX generate-ssl-cert script finished at $(date)

exit 0
